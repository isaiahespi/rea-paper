---
title: Figures, Plots, Graphs
author: Isaiah
format: 
  html: 
    code-fold: false
    code-tools: true
    code-overflow: wrap
    code-copy: true
    code-annotations: true
---


```{r}
#| label: setup
#| output: false

# load packages
library(tidyverse)
library(janitor)

# load data
load("data/df-2024-09-11.Rdata") # df set as factor with dummy vars


# To avoid excessive copy/paste, I made a function to create Likert plots
# it is mostly a wrapper around `ggstats::gglikert`, but with a specific set up
# particular colors, theme, etc. 
likert_plot <- function(data, x, y){
  ggstats::gglikert(data = data, include = {{ x }}, y = {{ y }}, 
                    facet_rows = vars(.question))+
    # customize color
    scale_fill_manual(values = c("black", "grey35", "firebrick1", "firebrick3"))+
    theme_bw()+
    theme(
      legend.position = 'bottom',    # place legend on bottom
      axis.text.x = element_blank(), # remove percentage text along x-axis
      strip.text = element_blank() # remove label of facet
        )
}



```


## Figures

```{r}
#| label: fig-q19-likert
#| fig-cap: "Confidence in Accurate Vote Count by Experiment Condition"
#| fig-cap-location: top

# Q19 by experiment condition, Likert style plot
likert_plot(df, q19, group)+
  labs(
    title = "Confidence in Vote Count by Recruitment Program",
    caption = "VMF Recruitment = 639, Standard Recruitment = 624",
    x = str_wrap(attr(df$q19, "label"), width = 95))

# same plot, without the function
df |>
  ggstats::gglikert(include = c(q19), y = 'group')+
  ggplot2::facet_grid(cols = vars(.question))+
  labs(
    title = "Confidence in Vote Count by Experiment Condition",
    caption = "VMF Recruitment = 639, Standard Recruitment = 624",
    x = "How confident are you that votes in Maricopa County, AZ will be counted as voters intend in the elections this November?"
  )+
  # customize color
  scale_fill_manual(
    values = c("black", "grey35", "firebrick1", "firebrick3")
  )+
  theme_bw()+
  theme(legend.position = 'bottom',    # place legend on bottom
        axis.text.x = element_blank(), # remove percentage text along x-axis
        strip.text.x = element_blank()) # remove label of facet

```


```{r}
#| label: fig-q19-barplot
#| fig-cap: "Confidence in Accurate Vote Count by Experiment Condition"
#| fig-cap-location: top

# Q19 by experiment condition, barplot
# black and white. Includes number of obs
df |> 
  # compute frequency within each combination
  group_by(group, q19) |> 
  count() |>  
  # compute proportion within group
  # n is the default variable created by count()
  group_by(group) |> 
  mutate(prop = round(n/sum(n), digits = 3),
         pct = prop*100,
         res = str_c(pct,'% (', n, ')', sep = "")) |> 
  ggplot(aes(x = q19, y = pct, fill = group))+
  geom_bar(position = 'dodge', stat = 'identity')+
  geom_text(aes(label = res), position = position_dodge(1.0), size = 2.5, vjust = -0.5)+
  scale_fill_grey(start = 0.5, end = 0.1)+
  # \n in a string tells R to break the line there
  labs(y = "Percentage",
       x = "Q19. How confident are you that votes in Maricopa County, AZ \nwill be counted as voters intend in the elections this November?",
       fill = "Group\nExperiment\nCondition",
       caption = 'Treatment n = 639, Control n = 624')+
  theme_bw()
```


```{r}
#| label: fig-q19-barplot2
#| fig-cap: "Confidence in Accurate Vote Count by Experiment Condition"
#| fig-cap-location: top

# alternate
# Q19 by experiment condition, barplot
# different colors. Removes number of obs
df |> 
  # compute frequency within each combination
  group_by(group, q19) |> 
  count() |>  
  # compute proportion within group
  # n is the default variable created by count()
  group_by(group) |> 
  mutate(prop = round(n/sum(n), digits = 3),
         pct = prop*100,
         res = str_c(pct,'%')) |> 
  ggplot(aes(x = q19, y = pct, fill = group))+
  geom_bar(position = 'dodge', stat = 'identity')+
  geom_text(aes(label = res), position = position_dodge(1.0), size = 2.5, vjust = -0.5)+
  # set fill colors manually
  scale_fill_manual(
    values = c("grey28", 'firebrick3'))+
  # scale_fill_grey(start = 0.5, end = 0.1)+
  # \n in a string tells R to break the line there
  labs(y = "Percentage",
       x = "How confident are you that votes in Maricopa County, AZ \nwill be counted as voters intend in the elections this November?",
       fill = "Group\nExperiment\nCondition",
       caption = 'Treatment n = 639, Control n = 624')+
  theme_bw()+
  theme(legend.position = "bottom")
```




```{r}
#| label: fig-q19-legit
#| fig-cap: "Confidence in Accuracy of Vote counts in Maricopa County, AZ among those who believe Biden's 2020 election was or was not legitimate"
#| fig-subcap: "Proportion of confidence in vote count by 2020 election legitimacy and group condition "
#| fig-cap-location: top

df |> 
  select(group, q7, q19, q19.clps) |>
  drop_na() |> 
  ggstats::gglikert(include = c(q19), y = 'group')+
  ggplot2::facet_grid(rows = vars(q7))+
  # customize color
  scale_fill_manual(values = c("black", "grey35", "firebrick1", "firebrick3"))+
  labs(
    title = "Confidence in Vote Count by Beliefs of 2020 Election Legitimacy and Election Staff Recruitment",
    subtitle = "Do you think Joe Biden's election as president was legitimate, or was he not legitimately elected?",
    caption = "VMF Recruitment = 639, Standard Recruitment = 624",
    x = "How confident are you that votes in Maricopa County, AZ will be counted as voters intend in the elections this November?"
  )+
  theme_bw()+
  theme(legend.position = 'bottom', axis.text.x = element_blank())

```


```{r}
#| label: fig-q19-legit-coef-plot
#| fig-cap: "Confidence in Accuracy of Vote counts in Maricopa County, AZ among those who believe Biden's 2020 election was not legitimate"
#| fig-subcap: "Means comparison with 95% confidence intervals 'Very confident' and 'Somewhat confident' = 1, 'Not too confident' and 'Not confident at all' = 0'"

# model difference 
modq19_q7 <- df |> 
  # mutate q19 into a dummy numeric var 
  # where 'Somewhat' and 'Very' confident = 1
  mutate(q19.dum = dplyr::case_when(
    q19.clps == "Confident" ~ 1,
    q19.clps == "Not_confident" ~ 0,
    TRUE ~ NA
  ),
  # mutate q7 into a numeric dummy var where legitimate = 1, not legit = 0
  q7.dum = dplyr::case_when(
    q7 == "Legitimate" ~ 1,
    q7 == "Not legitimate" ~ 0,
    TRUE ~ NA
  )) |>
  # select only those vars that will be in the model
  select(group, q7.dum, q19.dum) |>
  # drop any NA values from data
  drop_na() %>%
  # filter by those who believe that Biden's 2020 election was not legitimate
  filter(q7.dum == 0) %>% # idk why the magitr pipe works but not the native pipe
  # run a linear model
  lm(q19.dum ~ group, data = .)



# create a coef plot of the linear model with confidence interval error bars 
ggstats::ggcoef_model(model = modq19_q7, conf.int = T)+
  labs(
    caption = "estimate = 0.145, SE = 0.0460, t-statistic = 3.16, CI [0.0548, 0.236]"
  )+
  theme_bw()+
  theme(legend.position = 'bottom')



```

```{r}
#| label: fig-q20-barplot
#| fig-cap: "Confidence Election Officials in Maricopa County, AZ will do a good job by Experiment Condition"
#| fig-cap-location: top

# Q20 by experiment condition, barplot
df |> 
  # compute frequency within each combination
  group_by(group, q20) |> 
  count() |>  
  # compute proportion within group
  # n is the default variable created by count()
  group_by(group) |> 
  drop_na() |> 
  mutate(prop = round(n/sum(n), digits = 3),
         pct = prop*100,
         res = str_c(pct,'% (', n, ')', sep = "")) |> 
  ggplot(aes(x = q20, y = pct, fill = group))+
  geom_bar(position = 'dodge', stat = 'identity')+
  geom_text(aes(label = res), position = position_dodge(1.0), size = 2.5, vjust = -0.5)+
  scale_fill_grey(start = 0.5, end = 0.1)+
  # \n in a string tells R to break the line there
  labs(y = "Percentage",
       x = "Q20. How confident are you that election officials, their staff, and volunteers in Maricopa County, AZ \nwill do a good job conducting the elections this November?",
       fill = "Group\nExperiment\nCondition",
       caption = 'Treatment n = 638, Control n = 624')+
  theme_bw()


```


```{r}
#| label: fig-q20-likert
#| fig-cap: "Election staff in Maricopa County, AZ will do a good job by Experiment Condition"
#| fig-cap-location: top

df |>
  labelled::set_variable_labels(
    q19 = "Votes will be counted as voters intend",
    q20 = "Election staff in Maricopa County, AZ will do a good job",
    q22 = "Voting process will be fair in Maricopa County, AZ",
    q23 = "Voting outcomes will be fair in Maricopa county, AZ",
    q24 = "Election systems will be secure from technological threats",
    q26 = "Voting sites will be safe places for in-person voting"
  ) |> 
  ggstats::gglikert(include = c(q20), y = 'group', facet_rows = vars(.question))+ 
  theme_bw()+
  theme(legend.position = 'bottom')


```

```{r}
#| label: fig-q20-coefplot


modq20 <- df |> 
  select(group, q20, q20.clps) |> 
  drop_na() |> 
  mutate(q20.dum = dplyr::case_when(
    q20.clps == "Confident" ~ 1,
    q20.clps == "Not_confident" ~ 0,
    TRUE ~ NA
  )) %>%
  lm(q20.dum ~ group, data = .)

# modq20 |> summary() |> broom::tidy(conf.int = T)


# create a coef plot of the linear model with confidence interval error bars 
ggstats::ggcoef_model(model = modq20, conf.int = T)+
  theme_bw()+
  theme(legend.position = 'bottom')



```



```{r}
#| label: fig-q21-barplot
#| fig-cap: "Confidence in Commitment of Election Staff and Volunteers by Experiment Condition"
#| fig-cap-location: top

df |> 
  # compute frequency within each combination
  group_by(group, q21) |> 
  count() |>  
  # compute proportion within group
  # n is the default variable created by count()
  group_by(group) |> 
  mutate(prop = round(n/sum(n), digits = 3),
         pct = prop*100,
         res = str_c(pct,'% (', n, ')', sep = "")) |> 
  ggplot(aes(x = q21, y = pct, fill = group))+
  geom_bar(position = 'dodge', stat = 'identity')+
  geom_text(aes(label = res), position = position_dodge(1.0), size = 2.5 , vjust = -0.5)+
  scale_fill_grey(start = 0.5, end = 0.1)+
  # \n in a string tells R to break the line there
  labs(y = "Percentage",
       x = "How committed do you think Election Staff will be \nto making sure the elections held this November are fair and accurate?",
       fill = "Group\nExperiment\nCondition",
       caption = 'Treatment n = 639, Control n = 624')+
  theme_bw()

```

```{r}
#| label: fig-q21-likert
#| fig-cap: "Confidence in Commitment of Election Staff and Volunteers by Experiment Condition"
#| fig-cap-location: top

df |>
  ggstats::gglikert(include = c(q21), y = 'group')+
  ggplot2::facet_grid(cols = vars(.question))+
  labs(
    title = "Confidence in Commitment of Election Staff and Volunteers by Experiment Condition",
    caption = "VMF Recruitment = 639, Standard Recruitment = 624",
    x = "How committed do you think Election Staff will be \nto making sure the elections held this November are fair and accurate?"
  )+
  # customize color
  scale_fill_manual(
    values = c("black", "grey35", "firebrick1", "firebrick3")
  )+
  theme_bw()+
  theme(legend.position = 'bottom',    # place legend on bottom
        axis.text.x = element_blank(), # remove percentage text along x-axis
        strip.text.x = element_blank()) # remove label of facet



```

```{r}
#| label: fig-q22-likert
#| fig-cap: "Confidence in Fair Voting Process by Experiment Condition"
#| fig-cap-location: top

df |>
  ggstats::gglikert(include = c(q22), y = 'group')+
  ggplot2::facet_grid(cols = vars(.question))+
  labs(
    title = "Confidence in Fair Voting Process by Experiment Condition",
    caption = "VMF Recruitment = 639, Standard Recruitment = 624",
    x = "How confident are you that the voting process will be fair in Maricopa County, AZ?"
  )+
  # customize color
  scale_fill_manual(
    values = c("black", "grey35", "firebrick1", "firebrick3")
  )+
  theme_bw()+
  theme(legend.position = 'bottom',    # place legend on bottom
        axis.text.x = element_blank(), # remove percentage text along x-axis
        strip.text.x = element_blank()) # remove label of facet



```

```{r}
#| label: fig-q22-barplot
#| fig-cap: "Confidence in Fair Voting Process by Experiment Condition"
#| fig-cap-location: top


df |> 
  # compute frequency within each combination
  group_by(group, q22) |> 
  count() |>  
  # compute proportion within group
  # n is the default variable created by count()
  group_by(group) |> 
  mutate(prop = round(n/sum(n), digits = 3),
         pct = prop*100,
         res = str_c(pct,'% (', n, ')', sep = "")) |> 
  ggplot(aes(x = q22, y = pct, fill = group))+
  geom_bar(position = 'dodge', stat = 'identity')+
  geom_text(aes(label = res), position = position_dodge(1.0), size = 2.5 , vjust = -0.5)+
  scale_fill_grey(start = 0.5, end = 0.1)+
  # \n in a string tells R to break the line there
  labs(y = "Percentage",
       x = "How confident are you that the voting process will be fair in Maricopa County, AZ?",
       fill = "Group\nExperiment\nCondition",
       caption = 'Treatment n = 639, Control n = 624')+
  theme_bw()




```

```{r}
#| label: fig-q22-legit-coef-plot
#| fig-cap: "Confidence in Electoral Process in Maricopa County, AZ among those who believe Biden's 2020 election was not legitimate"
#| fig-subcap: "Means comparison with 95% confidence intervals 'Very confident' and 'Somewhat confident' = 1, 'Not too confident' and 'Not confident at all' = 0'"

# model difference 
modq22_q7 <- df |> 
  # mutate q19 into a dummy numeric var 
  # where 'Somewhat' and 'Very' confident = 1
  mutate(q22.dum = dplyr::case_when(
    q22.clps == "Confident" ~ 1,
    q22.clps == "Not_confident" ~ 0,
    TRUE ~ NA
  ),
  # mutate q7 into a numeric dummy var where legitimate = 1, not legit = 0
  q7.dum = dplyr::case_when(
    q7 == "Legitimate" ~ 1,
    q7 == "Not legitimate" ~ 0,
    TRUE ~ NA
  )) |>
  # select only those vars that will be in the model
  select(group, q7.dum, q22.dum) |>
  # drop any NA values from data
  drop_na() %>%
  # filter by those who believe that Biden's 2020 election was not legitimate
  filter(q7.dum == 0) %>% # idk why the magitr pipe works but not native pipe
  # run a linear model
  lm(q22.dum ~ group, data = .)

# show the (tidy) results of the model
# the (Intercept) estimate reflects the mean "confident" in the control group among those
# who believe the 2020 election was not legitimate
# the 'groupTreatment' estimate is the mean of "confident" in the treatment
# group among those who believe the 2020 election was not legitimate
# 'statistic' reflects the t-value, and p-value = 0.001706 
summary(modq22_q7) |> broom::tidy(conf.int = T)

# create a coef plot of the linear model with confidence interval error bars 
ggstats::ggcoef_model(model = modq19_q7, conf.int = T)+
  labs(
    caption = "estimate = 0.145, SE = 0.0460, t-statistic = 3.16, CI [0.0548, 0.236]"
  )+
  theme_bw()+
  theme(legend.position = 'bottom')



```

```{r}
#| label: fig-q23-likert
#| fig-cap: "Confidence in Fair Voting Outcomes by Recruitment Program"
#| fig-cap-location: top

df |>
  ggstats::gglikert(include = c(q23), y = 'group')+
  ggplot2::facet_grid(cols = vars(.question))+
  labs(
    title = "Confidence in Fair Voting Outcomes by Recruitment Program",
    caption = "VMF Recruitment = 639, Standard Recruitment = 624",
    x = "How confident are you that the voting outcomes will be fair in Maricopa County, AZ?"
  )+
  # customize color
  scale_fill_manual(
    values = c("black", "grey35", "firebrick1", "firebrick3")
  )+
  theme_bw()+
  theme(legend.position = 'bottom',    # place legend on bottom
        axis.text.x = element_blank(), # remove percentage text along x-axis
        strip.text.x = element_blank()) # remove label of facet



```

```{r}
#| label: fig-q23-barplot

df |> 
  # compute frequency within each combination
  group_by(group, q23) |>
  count() |>  
  # compute proportion within group
  # n is the default variable created by count()
  group_by(group) |>  
  drop_na() |> 
  mutate(prop = round(n/sum(n), digits = 3),
         pct = prop*100,
         res = str_c(pct,'% (', n, ')', sep = "")) |> 
  ggplot(aes(x = q23, y = pct, fill = group))+
  geom_bar(position = 'dodge', stat = 'identity')+
  geom_text(aes(label = res), position = position_dodge(1.0), size = 2.5 , vjust = -0.5)+
  scale_fill_grey(start = 0.5, end = 0.1)+
  # \n in a string tells R to break the line there
  labs(y = "Percentage",
       x = "Q23. How confident are you that the voting outcomes will be fair in Maricopa County, AZ?",
       fill = "Group\nExperiment\nCondition",
       caption = 'Treatment n = 639, Control n = 624')+
  theme_bw()



```


```{r}
#| label: fig-q22-q23-legit
#| fig-cap: "Confidence in Electoral Process and Outcome in Maricopa County, AZ among those who believe Biden's 2020 election was or was not legitimate"
#| fig-cap-location: top
#| column: body-outset

df |> 
  select(group, q7, q22, q23, q22.clps) |>
  drop_na() |> 
  filter(q7 == "Not legitimate") |> 
  ggstats::gglikert(
    include = c(q22, q23),
    y = 'group',
    facet_rows = vars(q7),
    facet_cols = vars(.question))+
  theme_bw()+
  theme(legend.position = 'bottom')

```

```{r}
#| label: fig-q24-likert
#| fig-cap: "Trust in Election Systems Tech by Recruitment Program"
#| fig-cap-location: top

df |>
  select(q24, group) |> 
  drop_na() |> 
  ggstats::gglikert(include = c(q24), y = 'group')+
  ggplot2::facet_grid(cols = vars(.question))+
  labs(
    title = "Trust in Election Systems Tech by Recruitment Program",
    caption = "VMF Recruitment = 639, Standard Recruitment = 623",
    x = "How confident are you that election systems in Maricopa County, AZ will be secure from hacking and other technological threats?"
  )+
  # customize color
  scale_fill_manual(
    values = c("black", "grey35", "firebrick1", "firebrick3")
  )+
  theme_bw()+
  theme(legend.position = 'bottom',    # place legend on bottom
        axis.text.x = element_blank(), # remove percentage text along x-axis
        strip.text.x = element_blank()) # remove label of facet



```

```{r}
#| label: fig-q24-barplot
#| fig-cap: "Confidence in Election Systems Tech by Experiment Condition"
#| fig-cap-location: top


df |> 
  # compute frequency within each combination
  group_by(group, q24) |>
  count() |>  
  # compute proportion within group
  # n is the default variable created by count()
  group_by(group) |>  
  drop_na() |> 
  mutate(prop = round(n/sum(n), digits = 3),
         pct = prop*100,
         res = str_c(pct,'% (', n, ')', sep = "")) |> 
  ggplot(aes(x = q24, y = pct, fill = group))+
  geom_bar(position = 'dodge', stat = 'identity')+
  geom_text(aes(label = res), position = position_dodge(1.0), size = 2.5 , vjust = -0.5)+
  scale_fill_grey(start = 0.5, end = 0.1)+
  # \n in a string tells R to break the line there
  labs(y = "Percentage",
       x = "Q24.How confident are you that election systems in Maricopa County, AZ will be secure from hacking and other technological threats?",
       fill = "Group\nExperiment\nCondition",
       caption = 'Treatment n = 639, Control n = 624')+
  theme_bw()



```


```{r}
#| label: fig-q25-likert
#| fig-cap: "Concern for violence, threats, or voter intimidation in Maricopa County, AZ by Recruitment Program"
#| fig-cap-location: top

df |>
  select(q25, group) |> 
  drop_na() |> 
  # dplyr::mutate(q25 = forcats::fct_rev(q25)) |> 
  ggstats::gglikert(include = c(q25), y = 'group', reverse_likert = F)+
  ggplot2::facet_grid(cols = vars(.question))+
  labs(
    title ="Concern for violence, threats, or voter intimidation in Maricopa County, AZ by Recruitment Program",
    caption = "VMF Recruitment = 639, Standard Recruitment = 623",
    x = "Thinking about Maricopa County, AZ, how concerned should voters feel about \npotential violence, threats of violence, or intimidation while voting in person at their local polling place?"
  )+
  # customize color
  scale_fill_manual(
    values = c("black", "grey35", "firebrick1", "firebrick3")
  )+
  theme_bw()+
  theme(legend.position = 'bottom',    # place legend on bottom
        axis.text.x = element_blank(), # remove percentage text along x-axis
        strip.text.x = element_blank()) # remove label of facet



```

```{r}
#| label: fig-q25-barplot
#| fig-cap: "Concern for violence, threats, or voter intimidation in Maricopa County, AZ by Experiment Condition"
#| fig-cap-location: top

df |>
  # compute frequency within each combination
  group_by(group, q25) |>
  count() |>
  # compute proportion within group
  # n is the default variable created by count()
  group_by(group) |>
  mutate(prop = round(n/sum(n), digits = 3),
         pct = prop*100,
         res = str_c(pct,'% (', n, ')', sep = "")) |>
  ggplot(aes(x = q25, y = pct, fill = group))+
  geom_col(position = 'dodge')+
  geom_text(aes(label = res), position = position_dodge(1.0), size = 2.5 , vjust = -0.5)+
  scale_fill_grey(start = 0.5, end = 0.1)+
  # \n in a string tells R to break the line there
  labs(y = "Percentage",
       x = "Q25. Thinking about Maricopa County, AZ, how concerned should voters feel about \npotential violence, threats of violence, or intimidation while voting in person at their local polling place?",
       fill = "Group\nExperiment\nCondition",
       caption = 'Treatment n = 639, Control n = 624')+
  theme_bw()


```



```{r}
#| label: fig-q26-barplot
#| fig-cap: "In-person voter safety in Maricopa County, AZ by Experiment Condition"
#| fig-cap-location: top


df |>
  drop_na(q26) |>
  # compute frequency within each combination
  group_by(group, q26) |>
  count() |>
  # compute proportion within group
  # n is the default variable created by count()
  group_by(group) |>
  mutate(prop = round(n/sum(n), digits = 3),
         pct = prop*100,
         res = str_c(pct,'% (', n, ')', sep = "")) |>
  ggplot(aes(x = q26, y = pct, fill = group))+
  geom_col(position = 'dodge')+
  geom_text(aes(label = res), position = position_dodge(1.0), size = 2.5 , vjust = -0.5)+
  scale_fill_grey(start = 0.5, end = 0.1)+
  # \n in a string tells R to break the line there
  labs(y = "Percentage",
       x = "Q26. How confident, if at all, are you that in person polling places in Maricopa County, AZ \nwill be safe places for voters to cast their ballots during the upcoming elections in November?",
       fill = "Group\nExperiment\nCondition",
       caption = 'Treatment n = 638, Control n = 624')+
  theme_bw()



```

```{r}
#| label: fig-q26-likert
#| fig-cap: "In-person voter safety in Maricopa County, AZ by Experiment Condition"
#| fig-cap-location: top


# q26
df |> 
  ggstats::gglikert(include = q26, 
                    variable_labels = c(q26 ="Confidence in Voter Safety"),
                    y = 'group',
                    facet_rows = vars(.question))+
  labs(
    title = "Confidence for In-person voter safety in Maricopa County, AZ by Experiment Condition",
    subtitle = "Q26. How confident, if at all, are you that in person polling places in Maricopa County, AZ \nwill be safe places for voters to cast their ballots during the upcoming elections in November?",
       caption = 'Treatment n = 638, Control n = 624')+
  theme_bw()+
  theme(legend.position = 'bottom')







```

```{r}
#| label: fig-safe
#| fig-cap: "Concern for violence and Confidence in Voter Safety in Maricopa County, AZ by Experiment Condition"
#| fig-cap-location: top
#| fig-subcap: 
#|   - "Concern for voter intimidation, threats, or violence"
#|   - "In-person voter safety at polling sites"
#| layout-ncol: 2
#| column: body-outset

# q25 concern for violence, threats, intimidation
df |> 
  mutate(q25 = forcats::fct_rev(q25)) |> 
  labelled::set_variable_labels(
    q25 = 'Concern for voter intimidation, threats, or violence'
  ) |> 
  ggstats::gglikert(include = q25,
                    y = 'group',
                    facet_rows = vars(.question))+
  labs(
    title = "Concern for voter intimidation, threats, or violence")+
  theme_bw()+
  theme(legend.position = 'bottom')

# q26 In-person voter safety at polling sites
df |> 
  ggstats::gglikert(include = q26, 
                    variable_labels = c(q26 ="Confidence in Voter Safety"),
                    y = 'group',
                    facet_rows = vars(.question))+
  labs(
    title = "Confidence for In-person voter safety in Maricopa County, AZ by Experiment Condition")+
  theme_bw()+
  theme(legend.position = 'bottom')



```



```{r}
#| label: fig-q27-barplot
#| fig-cap: "Approval of Election Officials in Maricopa County, AZ by Experiment Condition"
#| fig-cap-location: top


df |>
  # compute frequency within each combination
  group_by(group, q27) |>
  count() |>
  # compute proportion within group
  # n is the default variable created by count()
  group_by(group) |>
  drop_na() |> 
  mutate(prop = round(n/sum(n), digits = 3),
         pct = prop*100,
         res = str_c(pct,'% (', n, ')', sep = "")) |>
  ggplot(aes(x = q27, y = pct, fill = group))+
  geom_col(position = 'dodge')+
  geom_text(aes(label = res), position = position_dodge(1.0), size = 2.5 , vjust = -0.5)+
  scale_fill_grey(start = 0.5, end = 0.1)+
  # \n in a string tells R to break the line there
  labs(y = "Percentage",
       x = "Q27. Do you approve or disapprove of the way election officials in Maricopa County, AZ are handling their jobs?",
       fill = "Group\nExperiment\nCondition",
       caption = 'Treatment n = 636, Control n = 623')+
  theme_bw()




```



```{r}
#| label: fig-q27-likert
#| fig-cap: "Approval of Election Officials in Maricopa County, AZ by Experiment Condition"
#| fig-cap-location: top

# Q27
likert_plot(df, q27, group)+
  labs(
    title = "Approval of Election Officials in Maricopa County, AZ by Recruitment Program",
    caption = 'VMF Recruitment =  636, Standard Recruitment = 623',
    x = str_wrap(attr(df$q27, "label"), width = 95)
    )

# same thing, but not wrapped within the function
# df |> 
#   ggstats::gglikert(
#     include = q27, 
#     variable_labels = c(q27 ="Election Official Approval"),
#     y = 'group',
#     facet_rows = vars(.question))+
#   labs(
#     title = "Approval of Election Officials in Maricopa County, AZ by Recruitment Program",
#     subtitle = "Do you approve or disapprove of the way \nelection officials in Maricopa County, AZ are handling their jobs?",
#     caption = 'Treatment n = 636, Control n = 623')+
#   # customize color
#   scale_fill_manual(
#     values = c("black", "grey35", "firebrick1", "firebrick3")
#   )+
#   theme_bw()+
#   theme(legend.position = 'bottom',    # place legend on bottom
#         axis.text.x = element_blank(), # remove percentage text along x-axis
#         strip.text.x = element_blank()) # remove label of facet


```

```{r}
#| label: fig-q28-likert
#| fig-cap: "Expectation of Electoral Fraud in Maricopa County, AZ by Recruitment Program"
#| fig-cap-location: top

df |>
  mutate(across(c(q28_1:q28_5), ~ forcats::fct_rev(.))) |>
  labelled::set_variable_labels(
    q28_1 = "Voter fraud",
    q28_2 = "Vote Miscount",
    q28_3 = "Rejected",
    q28_4 = "Interference",
    q28_5 = "Discouraged"
  ) |>
  ggstats::gglikert(
    include = q28_1:q28_5,
    y = 'group',
    facet_rows = vars(.question)
  ) +
  # customize color
  scale_fill_manual(values = c("black", "grey35", "firebrick1", "firebrick3")) +
  labs(
    title = "Expectation of Electoral Fraud in Maricopa County, AZ by Recruitment Program",
    caption = 'VMF Recruitment = 639, Standard Recruitment = 624', 
    x = "How likely do you think any or all of the following will \nhappen during this year´s elections in Maricopa County, AZ?") +
  theme_bw() +
  theme(
    legend.position = 'bottom',     # place legend on bottom
    axis.text.x = element_blank(),  # remove percentage text along x-axis
    strip.text.x = element_blank()) # remove label of facet





```



```{r}
#| label: fig-q29-barplot
#| fig-cap: "Adopt by Experiment Condition"
#| fig-cap-location: top


df |>
  # compute frequency within each combination
  group_by(group, q29) |>
  count() |>
  # compute proportion within group
  # n is the default variable created by count()
  group_by(group) |>
  drop_na() |> 
  mutate(prop = round(n/sum(n), digits = 3),
         pct = prop*100,
         res = str_c(pct,'% (', n, ')', sep = "")) |>
  ggplot(aes(x = q29, y = pct, fill = group))+
  geom_col(position = 'dodge')+
  geom_text(aes(label = res), position = position_dodge(1.0), size = 2.5 , vjust = -0.5)+
  scale_fill_grey(start = 0.5, end = 0.1)+
  # \n in a string tells R to break the line there
  labs(y = "Percentage",
       x = "Q29. How much would you like to see your local community adopt a program for recruiting elections staff like the one you read about in Maricopa County, AZ?",
       fill = "Group\nExperiment\nCondition",
       caption = 'Treatment n = 638, Control n = 622')+
  theme_bw()




```

```{r}
#| label: fig-q29-likert
#| fig-cap: "Approval of Election Officials in Maricopa County, AZ by Recruitment Program"
#| fig-cap-location: top

# Q29
likert_plot(df, q29, group)+
  labs(
    title = "Approval of Election Officials in Maricopa County, AZ by Recruitment Program",
    x = str_wrap(attr(df$q29, "label"), width = 95),
    caption = 'VMF Recruitment = 638, Standard Recruitment = 622')

# df |> 
#   ggstats::gglikert(
#     include = q29, 
#     variable_labels = c(q29 ="Adopt Maricopa County Program"),
#     y = 'group',
#     facet_rows = vars(.question))+
#   labs(
#     subtitle = "How much would you like to see your local community adopt a program for recruiting elections staff like the one you read about in Maricopa County, AZ?",
#        caption = 'Treatment n = 638, Control n = 622')+
#   theme_bw()+
#   theme(legend.position = 'bottom')


```

```{r}
#| label: fig-q29-coefplot

modq29 <- df |> 
  select(group, q29, q29.clps) |> 
  drop_na() |> 
  mutate(q29.dum = dplyr::case_when(
    q29.clps == "support" ~ 1,
    q29.clps == "oppose" ~ 0,
    TRUE ~ NA
  )) %>%
  lm(q29.dum ~ group, data = .)

modq29 |> summary() |> broom::tidy(conf.int = T)
# this one is right on the line of statistical significance. t-statistic = 1.955, p-value = 0.0508
# so technically it is not statistically significant, which means we can't reject null that mean support (i.e., should adopt) is different from mean support for those in the control group with a one-tailed test. 

# create a coef plot of the linear model with confidence interval error bars 
ggstats::ggcoef_model(model = modq29, conf.int = T)+
  theme_bw()+
  theme(legend.position = 'bottom')

# I ran a t-test and a prop.test to confirm the results that were reported in the draft
# df |> 
#   select(group, q29, q29.clps) |> 
#   drop_na() |> 
#   mutate(q29.dum = dplyr::case_when(
#     q29.clps == "support" ~ 1,
#     q29.clps == "oppose" ~ 0,
#     TRUE ~ NA
#   ),
#   group = dplyr::case_when(
#     group == "VMF Recruitment" ~ 1,
#     group == "Standard Recruitment" ~ 0,
#     TRUE ~ NA
#   )) %>%
#   t.test(q29.dum ~ group, data = ., alternative = 'l') |> broom::tidy()
# 
# df |> 
#   select(group, q29, q29.clps) |> 
#   drop_na() |>
#   mutate(q29.clps = fct_rev(q29.clps)) |> 
#   mutate(q29.dum = dplyr::case_when(
#     q29.clps == "support" ~ 1,
#     q29.clps == "oppose" ~ 0,
#     TRUE ~ NA
#   ),
#   group = dplyr::case_when(
#     group == "VMF Recruitment" ~ 1,
#     group == "Standard Recruitment" ~ 0,
#     TRUE ~ NA
#   )) %>%
#   janitor::tabyl(group, q29.dum, show_na = F) |> 
#   dplyr::relocate("1", .before = "0") |> 
#   select(-1) %>% 
#   rstatix::prop_test(alternative = "l", detailed = T)
  
```



```{r}
#| label: fig-elec-conf
#| fig-cap-location: top
#| fig-cap: "Confidence in Election Administration by Experiment Condition"


df |>
  labelled::set_variable_labels(
    q19 = "Accurate Vote counts",
    q22 = "Fair Voting Process",
    q23 = "Fair Voting Outcomes",
    q24 = "Secure Election Tech",
    q26 = "Safe In-person Voting"
  ) |> 
  ggstats::gglikert(include = c(q19, q22,q23,q24,q26), y = 'group')+
  ggplot2::facet_grid(rows = vars(.question), labeller = label_wrap_gen(15))+
  labs(
    title = "Confidence in Election Administration by Experiment Condition"
  )+
  theme_bw()+
  theme(legend.position = 'bottom')

# df |>
#   labelled::set_variable_labels(
#     q19 = "Votes will be counted as voters intend",
#     q20 = "Election staff in Maricopa County, AZ will do a good job",
#     q22 = "Voting process will be fair in Maricopa County, AZ",
#     q23 = "Voting outcomes will be fair in Maricopa county, AZ",
#     q24 = "Election systems will be secure from technological threats",
#     q26 = "Voting sites will be safe places for in-person voting"
#   ) |> 
#   ggstats::gglikert(include = c(q19,q20,q22,q23,q24,q26),
#                     facet_cols = vars(group))+ 
#   labs(
#     title = "Trust and Confidence Electoral Process by Experiment Condition"
#   )+
#   theme_bw()+
#   theme(legend.position = 'bottom')


```

```{r}
#| label: fig-q41-vets-barplot
#| fig-cap: "Confidence in Election Fairness when Election Staff includes Veterans by Experiment Condition"
#| column: body-outset 

# barplot of q41.4 by group
df |> 
  select(group, q41.4, q41.5, q41.6) |> 
  drop_na() |> 
  # compute frequency within each combination
  group_by(group, q41.4) |> 
  count() |> 
  # compute proportion within group
  # n is the default variable created by count()
  group_by(group) |> 
  mutate(prop = round(n/sum(n), digits = 3),
         pct = prop*100,
         res = str_c(pct,'% (', n, ')', sep = "")) |> 
  # add y to inform geom_bar what to put in y-axis
  ggplot(aes(x = q41.4, y = prop, fill = group))+
  geom_col(position = 'dodge')+
  geom_text(aes(label = res), position = position_dodge(1.0), size = 2.5 , vjust = -0.5)+
  scale_fill_grey(start = 0.5, end = 0.1)+
  # coord_flip()+
  labs(y = "Prop",
       x = "Q41.4",
       fill = "Group\nExperiment\nCondition")




```


```{r}
#| label: fig-q41-lawyers-barplot
#| fig-cap: "Confidence in Election Fairness when Election Staff includes Lawyers by Experiment Condition"
#| column: body-outset 

df |> 
  select(group, q41.5.clps) |> 
  drop_na() |> 
  mutate(q41.5.clps = dplyr::case_when(
    q41.5.clps == "decrease" ~ "Decrease Confidence",
    q41.5.clps == "no_impact" ~ "No Impact",
    q41.5.clps == "increase" ~ "Increase Confidence",
    TRUE ~ NA
  )) |> 
  ggstats::gglikert(include = c(group), y = 'q41.5.clps', facet_row = vars(.question),  symmetric = T, add_totals = T)+
  # change color to black and grey
  scale_fill_grey(start = 0.7, end = 0.1)+
  labs(
    title = "How would the following impact your confidence in the fairness and accuracy of elections conducted this November?",
    subtitle = "Election staff and volunteers include lawyers from the community.",
    caption = "Treatment = 638, Control = 623"
  )+
  theme_bw()+
  theme(legend.position = 'bottom', strip.text = element_blank())


```

```{r}
#| label: fig-q41-students-barplot
#| fig-cap: "Confidence in Election Fairness when Election Staff includes College Students by Experiment Condition"
#| column: body-outset 

df |> 
  select(group, q41.6.clps) |> 
  drop_na() |> 
  mutate(q41.6.clps = dplyr::case_when(
    q41.6.clps == "decrease" ~ "Decrease Confidence",
    q41.6.clps == "no_impact" ~ "No Impact",
    q41.6.clps == "increase" ~ "Increase Confidence",
    TRUE ~ NA
  )) |> 
  ggstats::gglikert(include = c(group), y = 'q41.6.clps', facet_row = vars(.question),  symmetric = T, add_totals = T)+
  # change color to black and grey
  scale_fill_grey(start = 0.7, end = 0.1)+
  labs(
    title = "How would the following impact your confidence in the fairness and accuracy of elections conducted this November?",
    subtitle = "Election staff and volunteers include college students from the community.",
    caption = "Treatment = 638, Control = 623"
  )+
  theme_bw()+
  theme(legend.position = 'bottom', strip.text = element_blank())


```

```{r}
#| label: fig-q41-likert
#| fig-cap: "Impact on Confidence in Election Fairness and Accuracy by Experiment Condition"
#| column: body-outset 


# Q41.4 (vets), Q41.5 (lawyers), Q41.6 (students), by treatment
df |> 
  ggstats::gglikert(include = c(q41.4:q41.6), y = 'group',  symmetric = T, add_totals = F)+ 
  facet_grid(rows = vars(.question), labeller = label_wrap_gen(15))+
  labs(
    subtitle = "Q41. How would the following impact your confidence in the fairness and accuracy of elections conducted this November?"
  )+
  theme_bw()+
  theme(legend.position = 'bottom')



```

```{r}
#| label: fig-q41-coef-plot
#| fig-column: page-inset-right
#| warning: false
#| message: false


mod.q41.1 <- lm(formula = q41.1.clps.dum ~ group, data = df)
mod.q41.2 <- lm(formula = q41.2.clps.dum ~ group, data = df)
mod.q41.3 <- lm(formula = q41.3.clps.dum ~ group, data = df)
mod.q41.4 <- lm(formula = q41.4.clps.dum ~ group, data = df)
mod.q41.5 <- lm(formula = q41.5.clps.dum ~ group, data = df)
mod.q41.6 <- lm(formula = q41.6.clps.dum ~ group, data = df)

# place all the models in a list assigned as 'models' and include them in the
# ggstats::ggcoef_compare() function
models.q41 <- list(
  "Test Every Machine" = mod.q41.1,
  "Audit Ballots" = mod.q41.2,
  "Partisan Poll Watchers" = mod.q41.3,
  "Election Staff Includes Veterans" = mod.q41.4,
  "Election Staff Includes Lawyers" = mod.q41.5,
  "Election Staff Includes Students" = mod.q41.6
)


# print the coef plot and selectively color coefficients
ggstats::ggcoef_compare(
  models.q41, 
  conf.int = T, 
  add_reference_rows = F,
  categorical_terms_pattern = "{level} (ref: {reference_level})")+
  ggplot2::scale_color_manual(
    values = c("black", "black", "black", "red", "black", "black"))+
  labs(
    title = "Impact on Confidence in Election Fairness when Election Staff \nIncludes Veterans and Family by Experiment Condition",
    subtitle = "Means comparison with 95% confidence intervals\n'Increase in confidence' = 1, 'No increase in confidence = 0'",
    caption = "estimate = 0.11635, SE = 0.02799, t-statistic = 4.157, CI [-0.171, -0.0614]"
  )+
  theme_bw()+
  theme(legend.position = 'bottom')


```



```{r}
#| include: false


mod.q43.1 <- lm(formula = q43.1.clps.dum ~ group, data = df)
mod.q43.2 <- lm(formula = q43.2.clps.dum ~ group, data = df)
mod.q43.3 <- lm(formula = q43.3.clps.dum ~ group, data = df)
mod.q43.4 <- lm(formula = q43.4.clps.dum ~ group, data = df)
mod.q43.5 <- lm(formula = q43.5.clps.dum ~ group, data = df)
mod.q43.6 <- lm(formula = q43.6.clps.dum ~ group, data = df)

# place all the models in a list assigned as 'models' and include them in the
# ggstats::ggcoef_compare() function
models.q43 <- list(
  "Test Every Machine" = mod.q43.1,
  "Audit Ballots" = mod.q43.2,
  "Partisan Poll Watchers" = mod.q43.3,
  "Election Staff Includes Veterans" = mod.q43.4,
  "Election Staff Includes Lawyers" = mod.q43.5,
  "Election Staff Includes Students" = mod.q43.6
)
```



```{r}
#| label: fig-q43-coefplot
#| fig-column: page-inset-right
#| warning: false
#| message: false


# print the coef plot and selectively color coefficients
ggstats::ggcoef_compare(
  models.q43, 
  conf.int = T, 
  add_reference_rows = F, 
  categorical_terms_pattern = "{level} (ref: {reference_level})")+
  ggplot2::scale_color_manual(
    values = c("black", "black", "black", "red", "black", "black"))+
  labs(
    title = "Impact on Confidence in Voter Safety when Election Staff \nIncludes Veterans and Family by Experiment Condition",
    subtitle = "Means comparison with 95% confidence intervals\n'Increase in confidence' = 1, 'No increase in confidence = 0'",
    caption = "estimate = 0.0841, SE = 0.0280, t-statistic = 3.00, CI [0.0291, 0.139]"
  )+
  theme_bw()+
  theme(legend.position = 'bottom')


```

